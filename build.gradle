group 'com.kimarilem.bukkit.rxbukkit'
version rootProject.file('VERSION').text.trim()

buildscript {
	ext {
		bintray_plugin_version = '1.8.4'
		artifactory_plugin_version = '4.9.0'

		kotlin_version = '1.3.+'
		dokka_version = '0.9.17'
		rxkotlin_version = '2.3.0'
		rxjava_version = '2.2.6'
		bukkit_version = '1.13.2-R0.1-SNAPSHOT'

		kotlintest_version = '3.2.1'
	}

	repositories {
		jcenter()
	}

	dependencies {
		classpath group: 'com.jfrog.bintray.gradle', name: 'gradle-bintray-plugin', version :bintray_plugin_version
		classpath group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version:artifactory_plugin_version

		classpath group: 'org.jetbrains.kotlin', name: 'kotlin-gradle-plugin', version: kotlin_version
		classpath group: 'org.jetbrains.dokka', name: 'dokka-gradle-plugin', version: dokka_version
	}
}

apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.jfrog.artifactory'

repositories {
	jcenter()
	maven {
		url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
	}
}

dependencies {
	compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8', version: kotlin_version
	compile group: 'io.reactivex.rxjava2', name: 'rxkotlin', version: rxkotlin_version
	compile group: 'io.reactivex.rxjava2', name: 'rxjava', version: rxjava_version

	compileOnly group: 'org.bukkit', name: 'bukkit', version: bukkit_version

	testCompile group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: kotlin_version
	testCompile group: 'io.kotlintest', name: 'kotlintest-runner-junit5', version: kotlintest_version
	testCompile group: 'org.bukkit', name: 'bukkit', version: bukkit_version
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
	kotlinOptions {
		jvmTarget = "1.8"

		apiVersion = "1.3"
		languageVersion = "1.3"
	}
}

test {
	useJUnitPlatform()
}

def dokkaConfiguration = {
	processConfigurations = ['compile', 'compileOnly']

	externalDocumentationLink {
		url = new URL("https://hub.spigotmc.org/javadocs/bukkit/")
	}
}

dokka {
	configure dokkaConfiguration

	outputFormat = 'html'
	outputDirectory = "$docsDir/dokka"
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
	configure dokkaConfiguration

	outputFormat = 'javadoc'
	outputDirectory = javadoc.destinationDir
}

task sourcesJar(type: Jar) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

artifacts {
	archives jar
	archives sourcesJar
	archives javadocJar
}

def pomConfig = {
	name 'RxBukkit'
	description 'A ReactiveX wrapper around the Bukkit Event API'
	packaging 'jar'
	url 'https://github.com/Kimarilem/RxBukkit'

	licenses {
		license {
			name 'The MIT License (MIT)'
			url 'http://opensource.org/licenses/MIT'
			distribution 'repo'
		}
	}
	developers {
		developer {
			id 'Nauxuron'
			name 'Wim de With'
			email 'wf@dewith.io'
			organization 'Kimarilem'
		}

		developer {
			id 'Erackron'
			name 'Jorai Rijsdijk'
			email 'jorairijsdijk@gmail.com'
			organization 'Kimarilem'
		}
	}
	scm {
		connection 'scm:git:git://github.com/Kimarilem/RxBukkit.git'
		developerConnection 'scm:git:git@github.com:Kimarilem/RxBukkit.git'
		url 'https://github.com/Kimarilem/RxBukkit'
	}
}

publishing {
	publications {
		mavenPublication(MavenPublication) {
			artifact jar
			artifact sourcesJar
			artifact javadocJar

			groupId group
			artifactId rootProject.name
			version version

			pom.withXml {
				def root = asNode()
				def dependenciesNode = root.appendNode('dependencies')
				configurations.compile.allDependencies.each {
					def dependencyNode = dependenciesNode.appendNode('dependency')
					dependencyNode.appendNode('groupId', it.group)
					dependencyNode.appendNode('artifactId', it.name)
					dependencyNode.appendNode('version', it.version)
				}
				root.children().last() + pomConfig
			}
		}
	}
}

bintray {
	user = System.getProperty('bintray.user')
	key = System.getProperty('bintray.key')
	publications = ['mavenPublication']

	pkg {
		repo = 'bukkit'
		name = 'RxBukkit'
		userOrg = 'kimarilem'
	}
}

artifactory {
	contextUrl = 'http://oss.jfrog.org'

	publish {
		repository {
			repoKey = 'oss-snapshot-local'
			username = System.getProperty('bintray.user')
			password = System.getProperty('bintray.key')
		}
		defaults {
			publications('mavenPublication')
			publishArtifacts = true
			publishPom = true
		}
	}
	resolve {
		repoKey = 'jcenter'
	}
	clientConfig.info.setBuildNumber(System.getProperty('build.number') ?: 'manual-' + UUID.randomUUID())
}
